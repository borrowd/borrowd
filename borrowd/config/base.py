"""
Django settings for borrowd project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from borrowd.config.env import env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Some platforms (e.g. platform.sh) may generate the secret key per-deploy in a differnt env variable
# this allows us to specify where the secret key will come from, with a fallback for standard local dev conventions
_secret_key_var_name = env("DJANGO_SECRET_KEY_VAR_NAME", default="DJANGO_SECRET_KEY")
SECRET_KEY = env(_secret_key_var_name)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS: list[str] = []

#
# Borrowd settings
#
BORROWD_GROUP_INVITE_EXPIRY_SECONDS: int = 60 * 60 * 24 * 7  # 1 week
BORROWD_USE_LOCAL_BUNDLING = env("BORROWD_USE_LOCAL_BUNDLING", default=False)

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_cotton",
    "borrowd_users",  # Must be above `allauth` to use our templates
    "allauth",
    "allauth.account",
    "borrowd_web",
    "borrowd_items",
    "borrowd_groups",
    "guardian",
    "django_filters",
    "django_cleanup.apps.CleanupConfig",  # Must go last https://github.com/un1t/django-cleanup?tab=readme-ov-file#configuration
]

if not BORROWD_USE_LOCAL_BUNDLING:
    INSTALLED_APPS.insert(-1, "django_browser_reload")

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]
if not BORROWD_USE_LOCAL_BUNDLING:
    MIDDLEWARE.insert(0, "django_browser_reload.middleware.BrowserReloadMiddleware")

ROOT_URLCONF = "borrowd.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "borrowd.context_processors.use_local_bundling",
            ],
        },
    },
]

# https://django-cotton.com/docs/configuration
COTTON_DIR = "components"

WSGI_APPLICATION = "borrowd.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# AUTH
AUTH_USER_MODEL = "borrowd_users.BorrowdUser"

LOGIN_REDIRECT_URL = "/"

ACCOUNT_LOGIN_BY_CODE_ENABLED = True

# django-allauth configurations
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
    "guardian.backends.ObjectPermissionBackend",
]

# Email

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / "static",
]
if BORROWD_USE_LOCAL_BUNDLING:
    STATICFILES_DIRS += [
        BASE_DIR / "build/",
    ]

STATIC_URL = "static/"

# Media files settings
# https://docs.djangoproject.com/en/5.2/ref/settings/#media-root
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

#
# Shim for mypy to play nice with certain generic types
#
from django.db.models import (  # noqa: E402
    BooleanField,
    CharField,
    DateTimeField,
    ForeignKey,
    IntegerField,
    ManyToManyField,
    TextField,
)
from django.db.models.manager import BaseManager  # noqa: E402
from django.db.models.query import QuerySet  # noqa: E402
from django.forms import ModelForm  # noqa: E402
from django.views.generic import (  # noqa: E402
    CreateView,
    DeleteView,
    DetailView,
    ListView,
    UpdateView,
)

# NOTE: there are probably other items you'll need to monkey patch depending on
# your version.
for cls in [
    BaseManager,
    BooleanField,
    CharField,
    CreateView,
    DateTimeField,
    DeleteView,
    DetailView,
    ForeignKey,
    IntegerField,
    ListView,
    ManyToManyField,
    ModelForm,
    QuerySet,
    TextField,
    UpdateView,
]:
    cls.__class_getitem__ = classmethod(lambda cls, *args, **kwargs: cls)  # type: ignore [attr-defined]
